#ifndef MCCP_TYPE_H
#define MCCP_TYPE_H 1

/* Includes only basic types used by the
protocol. */

enum sflags {
	SFVALID		= 0x80,
	SFREADING	= 0x01,
	SFWRITING	= 0x02,
	SFSERVER	= 0x04
};
/*
enum ext {
	XPROTOCOL,	XCLICKDISTANCE,
	XCUSTOMBLOCKS,		xnHeldBlock,
xnEmoteFix,	MCCP_EXT_TEXT_HOT_KEY,
	MCCP_EXT_PLAYER_LIST,
	MCCP_EXT_ENV_COLORS,
	MCCP_EXT_SELECTION_CUBOID,
	MCCP_EXT_BLOCK_PERMISSIONS,
	MCCP_EXT_CHANGE_MODEL,
	MCCP_EXT_ENV_MAP_APPEARANCE,
	MCCP_EXT_ENV_WEATHER_TYPE,
	MCCP_EXT_HACK_CONTROL,
	MCCP_EXT_MESSAGE_TYPES,
	MCCP_EXT_PLAYER_LIST_2,
	MCCP_EXT_PLAYER_CLICK,
	MCCP_EXT_LONGER_MESSAGES,
	MCCP_EXT_FULL_CP_437,
	MCCP_EXT_BLOCK_DEFINITIONS,
	MCCP_EXT_BLOCK_DEFINITIONS_EXT,
	MCCP_EXT_BULK_BLOCK_UPDATE,
	MCCP_EXT_TEXT_COLORS,
	MCCP_EXT_BLOCK_DEFINITIONS_EXT_2,
	MCCP_EXT_ENV_MAP_APPEARANCE_2,
	MCCP_EXT_ENV_MAP_ASPECT,
	MCCP_EXT_ENTITY_PROPERTY,
	MCCP_EXT_ENTITY_POSITIONS,
	MCCP_EXT_TWO_WAY_PING,
	MCCP_EXT_INVENTORY_ORDER,
	MCCP_EXT_INSTANT_MOTD,
	MCCP_EXT_EXTENDED_BLOCKS,
	MCCP_EXT_FAST_MAP,
	MCCP_EXT_EXTENDED_TEXTURES,
	MCCP_EXT_SET_HOTBAR,
	MCCP_EXT_SET_SPAWNPOINT,
	MCCP_EXT_VELOCITY_CONTROL,
	MCCP_EXT_CUSTOM_PARTICLES,
	MCCP_EXT_COUNT};
*/
/* Packet number. */
enum pnum {
	PNINVALID = -1,
	/* v0/Null */
	PNGREETING,	PNPING,
	PNNEWLVL,	PNLVLDATA,
	PNLVLSIZE,	PNBLKEDIT,
	PNBLKCH,	PNNEWACTOR,
	PNACTORSTAT,	PNACTORCH,
	PNACTORSLID,	PNACTORHEAD,
	PNACTORDIED,
	/* v1 */
	PNCHATMSG,
	/* v2 */
	PNBYE,
	/* v6 */
	PNUSERCH,
	/* v7e */
	/*
	pnMCCP_EXT_COUNT,
	MCCP_EXT_ENTRY,
	MCCP_REACH,
	MCCP_BLK_LIST,
	MCCP_BLK_HOLD,
	MCCP_HOTKEY_SET,
	MCCP_PNAME_ADD,
	MCCP_ENT_ADD,
	MCCP_PNAME_CLR,
	MCCP_COL_SET,
	MCCP_BOX_MK,
	MCCP_BOX_CLR,
	MCCP_BLK_PERM_SET,
	MCCP_MODEL_SET,
	MCCP_APP_SET,
	MCCP_WEATHER,
	MCCP_HACK_SET,
	MCCP_ENT_ADD_2,
	MCCP_CLICK,
	MCCP_BLK_DEF,
	MCCP_BLK_UNDEF,
	MCCP_BLK_DEF_EXT,
	MCCP_BULK_UP,
	MCCP_TEXT_COL,
	MCCP_ENV_URL,
	MCCP_LVL_PROP,
	MCCP_ENT_PROP,
	MCCP_PING_2,
	MCCP_INV_SORT,
	MCCP_EQUIP,
	MCCP_SPAWN_SET,
	MCCP_VEL_SET,
	MCCP_PART_DEF,
	MCCP_PART_SPAWN, */
	PNCOUNT
};
/* Protocol state. */
enum pstat {
	PSUNKNOWN,	PSGREETED,
	PSLOADING,	PSRUNNING,
	PSCLOSE,	PSXSERVER,
	PSXCLIENT
};

typedef unsigned short u16;

typedef mci
(MCF treader)(
	struct mcx *ctx, mccu *src,
	mci qty, void *dst
),
(MCF twriter)(
	struct mcx *ctx, mcu *dst,
	mci qty, mccv *src
);

typedef mci
(MCF erdr)(
	struct mcx *ctx, void *dst,
	mci qty, mccu *src
),
(MCF ewtr)(
	struct mcx *ctx, mcu *dst,
	mci qty, void *src
);

#endif
